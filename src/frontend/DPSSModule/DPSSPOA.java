package frontend.DPSSModule;


/**
* DPSSModule/DPSSPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from DPSS.idl
* Wednesday, July 22, 2020 1:26:44 o'clock PM EDT
*/

public abstract class DPSSPOA extends org.omg.PortableServer.Servant
 implements DPSSOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("createPlayerAccount", new Integer (0));
    _methods.put ("playerSignIn", new Integer (1));
    _methods.put ("playerSignOut", new Integer (2));
    _methods.put ("getPlayerStatus", new Integer (3));
    _methods.put ("transferAccount", new Integer (4));
    _methods.put ("suspendAccount", new Integer (5));
    _methods.put ("shutdown", new Integer (6));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    Integer __method = (Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // DPSSModule/DPSS/createPlayerAccount
       {
         String firstName = in.read_string ();
         String lastName = in.read_string ();
         String age = in.read_string ();
         String userName = in.read_string ();
         String password = in.read_string ();
         String ipAddress = in.read_string ();
         String $result = null;
         $result = this.createPlayerAccount (firstName, lastName, age, userName, password, ipAddress);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // DPSSModule/DPSS/playerSignIn
       {
         String userName = in.read_string ();
         String password = in.read_string ();
         String ipAddress = in.read_string ();
         String $result = null;
         $result = this.playerSignIn (userName, password, ipAddress);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 2:  // DPSSModule/DPSS/playerSignOut
       {
         String userName = in.read_string ();
         String ipAddress = in.read_string ();
         String $result = null;
         $result = this.playerSignOut (userName, ipAddress);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 3:  // DPSSModule/DPSS/getPlayerStatus
       {
         String adminUsername = in.read_string ();
         String adminPassword = in.read_string ();
         String ipAddress = in.read_string ();
         String $result = null;
         $result = this.getPlayerStatus (adminUsername, adminPassword, ipAddress);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 4:  // DPSSModule/DPSS/transferAccount
       {
         String userName = in.read_string ();
         String password = in.read_string ();
         String oldIPAddress = in.read_string ();
         String newIPAddress = in.read_string ();
         String $result = null;
         $result = this.transferAccount (userName, password, oldIPAddress, newIPAddress);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 5:  // DPSSModule/DPSS/suspendAccount
       {
         String adminUsername = in.read_string ();
         String adminPassword = in.read_string ();
         String ipAddress = in.read_string ();
         String usernameToSuspend = in.read_string ();
         String $result = null;
         $result = this.suspendAccount (adminUsername, adminPassword, ipAddress, usernameToSuspend);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 6:  // DPSSModule/DPSS/shutdown
       {
         this.shutdown ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:DPSSModule/DPSS:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public DPSS _this()
  {
    return DPSSHelper.narrow(
    super._this_object());
  }

  public DPSS _this(org.omg.CORBA.ORB orb)
  {
    return DPSSHelper.narrow(
    super._this_object(orb));
  }


} // class DPSSPOA
